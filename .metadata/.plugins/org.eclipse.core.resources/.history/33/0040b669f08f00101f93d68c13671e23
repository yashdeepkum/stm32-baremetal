#include <stdint.h>

/* --- Base addresses (from RM0008 reference manual) --- */
#define PERIPH_BASE       0x40000000UL
#define APB2PERIPH_BASE   (PERIPH_BASE + 0x10000UL)
#define AHBPERIPH_BASE    (PERIPH_BASE + 0x20000UL)

#define RCC_BASE          (AHBPERIPH_BASE + 0x1000UL)
#define GPIOC_BASE        (APB2PERIPH_BASE + 0x1000UL)
#define GPIOA_BASE        (APB2PERIPH_BASE + 0x0800UL)
#define USART1_BASE       (APB2PERIPH_BASE + 0x3800UL)

/* --- Register structures --- */
#define RCC_APB2ENR       (*(volatile uint32_t *)(RCC_BASE + 0x18))
#define RCC_APB2ENR_IOPCEN (1<<4)
#define RCC_APB2ENR_IOPAEN (1<<2)
#define RCC_APB2ENR_USART1EN (1<<14)

#define GPIOC_CRH         (*(volatile uint32_t *)(GPIOC_BASE + 0x04))
#define GPIOC_BSRR        (*(volatile uint32_t *)(GPIOC_BASE + 0x10))
#define GPIOC_BRR         (*(volatile uint32_t *)(GPIOC_BASE + 0x14))

#define GPIOA_CRH         (*(volatile uint32_t *)(GPIOA_BASE + 0x04))

#define USART1_SR         (*(volatile uint32_t *)(USART1_BASE + 0x00))
#define USART1_DR         (*(volatile uint32_t *)(USART1_BASE + 0x04))
#define USART1_BRR        (*(volatile uint32_t *)(USART1_BASE + 0x08))
#define USART1_CR1        (*(volatile uint32_t *)(USART1_BASE + 0x0C))

/* --- Bit definitions --- */
#define USART_CR1_UE      (1<<13)
#define USART_CR1_TE      (1<<3)
#define USART_SR_TXE      (1<<7)

/* --- LED Pin --- */
#define LED_PIN 13

/* --- Functions --- */
void delay(volatile uint32_t t) {
    while(t--);
}

void uart1_init(void) {
    /* Enable clock for USART1 and GPIOA */
    RCC_APB2ENR |= RCC_APB2ENR_USART1EN | RCC_APB2ENR_IOPAEN;

    /* Configure PA9 (TX) as Alternate Function Push-Pull, 50 MHz */
    GPIOA_CRH &= ~(0xF << ((9-8)*4));        // clear CNF/MODE
    GPIOA_CRH |=  (0xB << ((9-8)*4));        // MODE9=11 (50MHz), CNF9=10 (AF PP)

    /* Set baud rate to 9600 assuming 8 MHz system clock */
    USART1_BRR = 0x341;

    /* Enable USART, TX */
    USART1_CR1 = USART_CR1_UE | USART_CR1_TE;
}

void uart1_send_char(char c) {
    while (!(USART1_SR & USART_SR_TXE));
    USART1_DR = c;
}

void uart1_send_string(const char *s) {
    while (*s) {
        uart1_send_char(*s++);
    }
}

int main(void) {
    /* Enable GPIOC clock */
    RCC_APB2ENR |= RCC_APB2ENR_IOPCEN;

    /* Configure PC13 as General purpose output push-pull, 2 MHz */
    GPIOC_CRH &= ~(0xF << ((LED_PIN-8)*4));
    GPIOC_CRH |=  (0x2 << ((LED_PIN-8)*4));   // MODE=10, CNF=00

    /* Init UART */
    uart1_init();

    while (1) {
        /* LED ON (PC13 low, active low) */
        GPIOC_BRR = (1<<LED_PIN);
        uart1_send_string("LED ON\r\n");
        delay(500000);

        /* LED OFF (PC13 high) */
        GPIOC_BSRR = (1<<LED_PIN);
        uart1_send_string("LED OFF\r\n");
        delay(500000);
    }
}
